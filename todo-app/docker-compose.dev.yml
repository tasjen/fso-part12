version: '3.8'

services:
  react-app:
    image: todo-frontend-dev
    container_name: react-app
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./todo-frontend:/workspace/todo-frontend-dev

  express-app:
    image: todo-backend-dev
    container_name: express-app
    build:
      context: ./todo-backend
      dockerfile: Dockerfile.dev
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    volumes:
      - ./todo-backend:/workspace/todo-backend-dev
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db # to make sure that our data is preserved after container is down

  redis:
    image: redis
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - react-app
      - express-app
